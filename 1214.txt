10_MyBatis03


jps  ==> Controller(this.dao.메서드) ==>   Impl ==>   xml(메서드처리) ==> impl(return)
==> Controller(메서드를 받아서 처리) ==> jsp



pom.xml

<!-- mybatis framework 라이브러리 -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis</artifactId>
		    <version>3.4.6</version>
		</dependency>
		
		
		<!-- mybatis-spring 라이브러리 -->
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis-spring</artifactId>
		    <version>1.3.1</version>
		</dependency>
		
		
		<!-- spring-jdbc 라이브러리 -->
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-jdbc</artifactId>
		    <version>${org.springframework-version}</version>
		</dependency>
		
		
		<!-- lombok 라이브러리 -->
		<dependency>
		    <groupId>org.projectlombok</groupId>
		    <artifactId>lombok</artifactId>
		    <version>1.18.30</version>
		    <scope>provided</scope>
		</dependency>	

-------------------------------------------
web.xml

<!-- 한글 인코딩 필터 설정 작업 -->
	<filter>
		
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.go</url-pattern>
	</filter-mapping>

---------------------------------------------
main.jsp

<div align="center">
	   <hr width="50%" color="marmoon">
	      <h3>BOARD 테이블 메인 페이지</h3>
	   <hr width="50%" color="marmoon">
	   <br> <br>
	   
	   <a href="<%=request.getContextPath() %>/board_list.go">[전체 게시물 목록]</a>
	
	</div>

----------------------------------------------
HomeController

@Controller
public class HomeController {
	
	private static final Logger logger = LoggerFactory.getLogger(HomeController.class);
	
	/**
	 * Simply selects the home view to render by returning its name.
	 */
	@RequestMapping(value = "/", method = RequestMethod.GET)
	public String home(Locale locale, Model model) {
		
		
		return "main";
	}

-------------------------------------------------
com.board.model

Board

@Data
public class Board {
	
	private int board_no;
	private String board_writer;
	private String board_title;
	private String board_cont;
	private String board_pwd;
	private int board_hit;
	private String board_date;
	private String board_update;

}

-----------------------------------------------
BoardDAO

public interface BoardDAO {

	int getListCount();
	
	List<Board> getBoardList(Page dto);
	
	int insertBoard(Board dto);
	
	void readCount(int no);
	
	Board boardContent(int no);
	
	int updateBoard(Board dto);
	
	int deleteBoard(int no);
	
	void updateSequence(int no);
	
	int searchBoardCount(Map<String, String> map);
	
	List<Board> searchBoardList(Page dto);
	
}

--------------------------------------------------
BoardDAOImpl

@Repository
public class BoardDAOImpl implements BoardDAO {

	
	@Inject
	private SqlSessionTemplate sqlSession;
	
	
	@Override
	public int getListCount() {
		
		return this.sqlSession.selectOne("cnt");
	}

	@Override
	public List<Board> getBoardList(Page dto) {
		
		return this.sqlSession.selectList("list", dto);
	}

	@Override
	public int insertBoard(Board dto) {
		return this.sqlSession.insert("add", dto);
	}

	@Override
	public void readCount(int no) {
		
		this.sqlSession.update("read", no);
		
	}

	@Override
	public Board boardContent(int no) {
		
		return this.sqlSession.selectOne("cont", no);
	}

	@Override
	public int updateBoard(Board dto) {
		
		return this.sqlSession.update("modify", dto);
		
	}

	@Override
	public int deleteBoard(int no) {
		
		return this.sqlSession.delete("del", no);
		
	}

	@Override
	public void updateSequence(int no) {
		
		this.sqlSession.update("seq", no);
		
	}

	@Override
	public int searchBoardCount(Map<String, String> map) {
		
		return this.sqlSession.selectOne("count", map);
		
	}

	@Override
	public List<Board> searchBoardList(Page dto) {
		
		return this.sqlSession.selectList("search", dto);
	}



---------------------------------------------------
src/main/resources 폴더안에

config 패키지 생성


datasource.properties 파일생성

jdbc.driver = oracle.jdbc.driver.OracleDriver
jdbc.url = jdbc:oracle:thin:@localhost:1521:XE
jdbc.username = web
jdbc.password = 1234


mybaits-config.xml 생성

<!DOCTYPE configuration
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-config.dtd">
  
<configuration>

	<typeAliases>
		<typeAlias type="com.board.model.BoardDAO" alias="boardDao" />
		<typeAlias type="com.board.model.Page" alias="pageDto" />
		<typeAlias type="com.board.model.Board" alias="boardDto" />
	</typeAliases>

</configuration>

----------------------------------------------------
src/main/resources 폴더안에

mapper 패키지 생성

board.xml 생성

---------------------------------------------------
main.jsp

<a href="<%=request.getContextPath() %>/board_list.go">[전체 게시물 목록]</a>

--------------------------------------------------
BoardController

@Controller
public class BoardController {

	@Inject
	private BoardDAO dao;
	
	// 한 페이지당 보여질 게시물의 수
	private final int rowsize = 3;
	
	// DB 상의 전체 게시물의 수
	private int totalRecord = 0;
	
	@RequestMapping("board_list.go")
	public String list(HttpServletRequest request,
							Model model) {
		
		// 페이징 처리 작업
		int page;    // 현재 페이지 변수
		
		if(request.getParameter("page") != null) {
			page = 
				Integer.parseInt(request.getParameter("page"));
		}else {
			// 처음으로 "게시물 전체 목록" 태그를 클릭한 경우
			page = 1;
		}
		
		// DB 상의 전체 게시물의 수를 확인하는 메서드 호출
		totalRecord = this.dao.getListCount();

--------------------------------
BoardDAOImpl

@Override
	public int getListCount() {
		
		return this.sqlSession.selectOne("cnt");
	}
-------------------------------------
BoardController

Page dto = new Page(page, rowsize, totalRecord);
		
		// 페이지에 해당하는 게시물을 가져오는 메서드 호출
		List<Board> list = this.dao.getBoardList(dto);
		
		model.addAttribute("List", list)
			 .addAttribute("Paging", dto);
		
		return "board_list";
		
	}

---------------------------------------
getBoardList(dto)

BoardDAOImpl

@Override
	public List<Board> getBoardList(Page dto) {
		
		return this.sqlSession.selectList("list", dto);
	}

----------------------------------------
board_list.jsp

<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

<body>

	<div align="center">
	   <hr width="50%" color="red">
	      <h3>BOARD 테이블 게시물 전체 리스트 페이지</h3>
	   <hr width="50%" color="red">
	   <br> <br>
	   
	   <table border="1" width="600">
	      <tr>
	         <th>게시물 No.</th> <th>게시글 제목</th>
	         <th>게시글 작성자</th> <th>게시글 조회수</th> <th>게시글 작성일자</th>
	      </tr>
	      
	      <c:set var="list" value="${List }" />
	      <c:set var="paging" value="${Paging }" />
	      
	      <c:if test="${!empty list }">
	         <c:forEach items="${list }" var="dto">
	            <tr>
	               <td> ${dto.board_no } </td>
	               <td> 
	                  <a href="<%=request.getContextPath() %>/board_content.go?no=${dto.board_no }&page=${paging.page }">
	               					${dto.board_title }
	               	  </a> 
	               </td>
	               <td> ${dto.board_writer } </td>
	               <td> ${dto.board_hit } </td>
	               <td> ${dto.board_date.substring(0, 10) } </td>
	            </tr>
	         </c:forEach>
	      </c:if>
	      
	      <c:if test="${empty list }">
	         <tr>
	            <td colspan="5" align="center">
	               <h3>전체 게시물 목록이 없습니다.</h3>
	            </td>
	         </tr>
	      </c:if>
	      
	   </table>
	   <br> <br>
	   
	   <input type="button" value="글쓰기"
	        onclick="location.href='board_write.go'">
	    
	   <br> <br> <br>
	   
	   
	   <%-- 페이징 처리 부분 --%>
	   <c:if test="${paging.page > paging.block }">
	      <a href="<%=request.getContextPath() %>/board_list.go?page=1">[처음으로]</a>
	      <a href="<%=request.getContextPath() %>/board_list.go?page=${paging.startBlock - 1}">◀</a>
	   </c:if>
	   
	   <c:forEach begin="${paging.startBlock }" end="${paging.endBlock }" var="i">
	   
	      <c:if test="${i == paging.page }">
	         <b><a href="<%=request.getContextPath() %>/board_list.go?page=${i }">[${i }]</a></b>
	      </c:if>
	      
	      <c:if test="${i != paging.page }">
	         <a href="<%=request.getContextPath() %>/board_list.go?page=${i }">[${i }]</a>
	      </c:if>
	   </c:forEach>
	   
	   <c:if test="${paging.endBlock < paging.allPage }">
	      <a href="<%=request.getContextPath() %>/board_list.go?page=${paging.endBlock + 1}">▶</a>
	      <a href="<%=request.getContextPath() %>/board_list.go?page=${paging.allPage}">[마지막으로]</a>
	   </c:if>
	   
	   <br> <br> <br>
	   
	   <%-- 검색 폼 부분 --%>
	   <form method="post" 
	   			action="<%=request.getContextPath() %>/board_search.go">
	   			
	   			<select name="field">
	   				<option value="title">제목</option>
	   				<option value="cont">내용</option>
	   				<option value="writer">작성자</option>
	   			</select>
	   			
	   			<input name="keyword">&nbsp;&nbsp;&nbsp;
	   			<input type="submit" value="검색">
	   </form>
	        
	</div>
</body>

---------------------------------------
board_list.jsp

<input type="button" value="글쓰기"
	        onclick="location.href='board_write.go'">

-----------------------------------------
BoardController

@RequestMapping("board_write.go")
	public String write() {
		
		return "board_write";
	}

-------------------------------------------
BoardDAOImpl

@Override
	public int insertBoard(Board dto) {
		this.sqlSession.insert("add", dto);
	}

-------------------------------------------
board.xml

<insert id="add" parameterType="boardDto">
		<selectKey resultType="int"
			keyProperty="board_no" order="BEFORE">
			select max(board_no) from board
		</selectKey>
		
		insert into board values(#{board_no} + 1,
		#{board_writer}, #{board_title},
		#{board_cont}, #{board_pwd}, default, sysdate, '')
	</insert>

---------------------------------------------
BoardDAOImpl

@Override
	public int insertBoard(Board dto) {
		return this.sqlSession.insert("add", dto);	// return
	}
--------------------------------------------
board_write.jsp

<body>

		<div align="center">
			<hr width="50%" color="blue">
				<h3>BOARD 테이블 게시판 글쓰기 폼 페이지</h3>
			<hr width="50%" color="blue">
			<br> <br>
			
			<form method="post"
					action="<%=request.getContextPath() %>/board_write_ok.go">
					
					<table border="1" width="350">
						<tr>
							<th>작성자</th>
							<td> <input name="board_writer"> </td>
						</tr>
						
						<tr>
							<th>글 제목</th>
							<td> <input name="board_title"> </td>
						</tr>
						
						<tr>
							<th>글 내용</th>
							<td>
								<textarea rows="7" cols="25" name="board_cont"></textarea>
							</td>
						</tr>
						
						<tr>
							<th>글 비밀번호</th>
							<td>
								<input type="password" name="board_pwd">
							</td>
						</tr>
						
						<tr>
							<td colspan="2" align="center">
								<input type="submit" value="글쓰기">&nbsp;&nbsp;
								<input type="reset" value="다시작성">
							</td>
						</tr>
						
					</table>
			</form>
			
		</div>
		
</body>
--------------------------------------------
board_write.jsp

<form method="post"
	action="<%=request.getContextPath() %>/board_write_ok.go">

----------------------------------------------
BoardController

@RequestMapping("board_write_ok.go")
	public void writeOk(Board dto,
			HttpServletResponse response) throws IOException {
		
		int res = this.dao.insertBoard(dto);
		
		response.setContentType("text/html; charset=UTF-8");
		
		PrintWriter out = response.getWriter();
		
		if(res > 0) {
			out.println("<script>");
			out.println("alert('게시글 추가 성공!!!')");
			out.println("location.href='board_list.go'");
			out.println("</script>");
		}else {
			out.println("<script>");
			out.println("alert('게시글 추가 실패~~~')");
			out.println("history.back()");
			out.println("</script>");
		}
		
	}

-------------------------------------
페이징

<%-- 페이징 처리 부분 --%>
	   <c:if test="${paging.page > paging.block }">
	      <a href="<%=request.getContextPath() %>/board_list.go?page=1">[처음으로]</a>
	      <a href="<%=request.getContextPath() %>/board_list.go?page=${paging.startBlock - 1}">◀</a>
	   </c:if>
	   
	   <c:forEach begin="${paging.startBlock }" end="${paging.endBlock }" var="i">
	   
	      <c:if test="${i == paging.page }">
	         <b><a href="<%=request.getContextPath() %>/board_list.go?page=${i }">[${i }]</a></b>
	      </c:if>
	      
	      <c:if test="${i != paging.page }">
	         <a href="<%=request.getContextPath() %>/board_list.go?page=${i }">[${i }]</a>
	      </c:if>
	   </c:forEach>
	   
	   <c:if test="${paging.endBlock < paging.allPage }">
	      <a href="<%=request.getContextPath() %>/board_list.go?page=${paging.endBlock + 1}">▶</a>
	      <a href="<%=request.getContextPath() %>/board_list.go?page=${paging.allPage}">[마지막으로]</a>
	   </c:if>

-----------------------------------------
Page

@Data
public class Page {

	// 페이징처리 관련 멤버 선언
	private int page;             // 현재 페이지
	private int rowsize;          // 한 페이지당 보여질 게시물의 수 
	private int totalRecord;      // DB 상의 테이블 전체 게시물 수
	private int startNo;          // 해당 페이지에서 시작 번호
	private int endNo;            // 해당 페이지에서 끝 번호
	private int startBlock;       // 해당 페이지에서의 시작 블럭
	private int endBlock;         // 해당 페이지에서의 끝 블럭
	private int allPage;          // 전체 페이지 수
	private int block = 3;        // 아래에 보여질 최대 페이지 수

public Page() {    }          // 기본 생성자
	
	
	// 일반적인 페이징 처리 인자 생성자
	public Page(int page, int rowsize, int totalRecord) {
		
		this.page = page;
		this.rowsize = rowsize;
		this.totalRecord = totalRecord;
		
		// 해당 페이지에서 시작 번호
		this.startNo = (this.page * this.rowsize) 
									- (this.rowsize - 1);
		
		// 해당 페이지에서 끝 번호
		this.endNo = (this.page * this.rowsize);
		
		// 해당 페이지에서 시작 블럭
		this.startBlock = 
				(((this.page - 1) / this.block) * this.block) + 1;
		
		// 해당 페이지에서 마지막 블럭
		this.endBlock = 
				(((this.page - 1) / this.block) * this.block) + this.block;
		
		// 전체 페이지 수 얻어오는 과정.
		this.allPage = 
				(int)Math.ceil(this.totalRecord / (double)this.rowsize);
		
		if(this.endBlock > this.allPage) {
			this.endBlock = this.allPage;
		}
		
	}  // 인자 생성자

-------------------------------------------
board_list.jsp

<%-- 페이징 처리 부분 --%>
	   <c:if test="${paging.page > paging.block }">
	      <a href="<%=request.getContextPath() %>/board_list.go?page=1">[처음으로]</a>
	      <a href="<%=request.getContextPath() %>/board_list.go?page=${paging.startBlock - 1}">◀</a>
	   </c:if>
	   
	   <c:forEach begin="${paging.startBlock }" end="${paging.endBlock }" var="i">
	   
	      <c:if test="${i == paging.page }">
	         <b><a href="<%=request.getContextPath() %>/board_list.go?page=${i }">[${i }]</a></b>
	      </c:if>
	      
	      <c:if test="${i != paging.page }">
	         <a href="<%=request.getContextPath() %>/board_list.go?page=${i }">[${i }]</a>
	      </c:if>
	   </c:forEach>
	   
	   <c:if test="${paging.endBlock < paging.allPage }">
	      <a href="<%=request.getContextPath() %>/board_list.go?page=${paging.endBlock + 1}">▶</a>
	      <a href="<%=request.getContextPath() %>/board_list.go?page=${paging.allPage}">[마지막으로]</a>
	   </c:if>

---------------------------------------------------
